<tool id="export2graphlan" name="Export to GraPhlAn" version="0.19">

    <description></description>

    <requirements>
        <requirement type="package" version="0.16">pandas</requirement>
        <requirement type="package" version="0.16">scipy</requirement>
        <requirement type="package" version="1.4">matplotlib</requirement>
        <requirement type="package" version="0.19">export2graphlan</requirement>
    </requirements>

    <stdio>
    </stdio>

    <version_command>
<![CDATA[
export2graphlan.py -v
]]>
    </version_command>

    <command>
<![CDATA[        
        export2graphlan.py
            -i $lefse_input

            #if $lefse_output
                -o lefse_output
            #end if

            -t $tree
            -a $annotation

            #if $annotations
                --annotations $annotations
            #end if

            #if $external_annotations
                --external_annotations $external_annotations
            #end if

            #if $background_levels
                --background_levels $background_levels
            #end if

            #if $background_clades
                --background_clades "$background_clades"
            #end if

            #if $background_colors
                --background_colors "$background_colors"
            #end if
 
            #if $title
                --title "title"
            #end if
  
            --title_font_size $title_font_size 
            --def_clade_size $def_clade_size 
            --min_clade_size $min_clade_size
            --max_clade_size $max_clade_size
            --def_font_size $def_font_size
            --min_font_size $min_font_size
            --max_font_size $max_font_size
            --annotation_legend_font_size $annotation_legend_font_size
            --abundance_threshold $abundance_threshold

            #if $most_abundant
                --most_abundant $most_abundant
            #end if

            #if $least_biomarkers
                --least_biomarkers $least_biomarkers
            #end if

            --fname_row $fname_row
            --sname_row $sname_row

            #if $metadata_rows
                --metadata_rows $metadata_rows
            #end if
                  
            #if $skip_rows  
                --skip_rows $skip_rows
            #end if

            #if $sperc
                --sperc $sperc
            #end if

            #if $fperc
                --fperc $fperc
            #end if

            #if $stop
                --stop $stop
            #end if

            #if $ftop
                --ftop $ftop
            #end if
]]>
    </command>

    <inputs>
        <param name="lefse_input" type="data" format="tabular,txt,tsv" label="Input file" help="Identical to LEfSe input file (--lefse_input)"/>

        <param name="lefse_output" type="data" format="tabular" label="Input file corresponding to LEfSe output file (Optional)" help="(--lefse_output)" optional="True"/>

        <param name="annotations" type="text" label="List which levels should be annotated in the tree (Optional)" help="The levels must be in comma-separated form (--annotations)" optional="True"/>

        <param name="external_annotations" type="text" label="List which levels should use the external legend for the annotation (Optional)" help="The levels must be in comma-separated form (--external_annotations)" optional="True"/>

        <param name="background_levels" type="text" label="List which levels should be highlight with a shaded background (Optional)" help="The levels must be in comma-separated form (--background_levels)" optional="True"/>

        <param name="background_clades" type="text" label="List of the clades that should be highlight with a shaded background (Optional)" help="The clades must be in comma-separated form (--background_clades)" optional="True"/>

        <param name="background_colors" type="text" label="List of color to use for the shaded background (Optional)" help="Colors can be either in RGB or HSV (using a semi-colon to separate values, surrounded with ()). The different colors must be in comma-separated form (--background_colors)" optional="True"/>
        
        <param name="title" type="text" label="Title of the GraPhlAn plot (Optional)" help="(--title)" optional="True"/>

        <param name="title_font_size" type="integer" value="15" label="Title font size" help="(--title_font_size)"/>

        <param name="def_clade_size" type="integer" value="10" label="Default size for clades that are not found as biomarkers" help="(--def_clade_size)"/>

        <param name="min_clade_size" type="integer" value="20" label="Minimum value of clades that are biomarkers" help="(--min_clade_size)"/>

        <param name="max_clade_size" type="integer" value="200" label="Maximum value of clades that are biomarkers" help="(--max_clade_size)"/>

        <param name="def_font_size" type="integer" value="10" label="Default font size" help="(--def_font_size)"/>

        <param name="min_font_size" type="integer" value="8" label="Minimum font size" help="(--min_font_size)"/>

        <param name="max_font_size" type="integer" value="12" label="Maximum font size" help="(--max_font_size)"/>

        <param name="annotation_legend_font_size" type="integer" value="10" label="Font size for the annotation legend" help="(--annotation_legend_font_size)"/>

        <param name="abundance_threshold" type="float" value="20.0" label="Minimun abundance value for a clade to be annotated" help="(--abundance_threshold)"/>

        <param name="most_abundant" type="integer" label="Number of clades to highlight (Optional)" help="(--most_abundant)" optional="True"/>

        <param name="least_biomarkers" type="integer" label="Minimum number of biomarkers to extract (Optional)" help=" The taxonomy is parsed, and the level is choosen in order to have at least the specified number of biomarkers(--least_biomarkers)" optional="True"/>

        <param name="fname_row" type="integer" value="0" label="Row number containing the names of the features" help="-1 specifies that no names are present in the matrix (--fname_row)"/>

        <param name="sname_row" type="integer" value="0" label="Row number containing the names of the samples" help="-1 specifies that no names are present in the matrix (--sname_row)"/>

        <param name="metadata_rows" type="integer" label="Row number to use as metadata (Optional)" help="(--metadata_rows)" optional="True"/>

        <param name="skip_rows" type="text" label="Row number to skip from the input file" help="The row numbers ar indexed to 0 and comma separated (--skip_rows)" optional="True"/>

        <param name="sperc" type="float" label="Percentile of sample value 
            distribution for sample selection (Optional)" help="(--sperc)" 
            optional="True"/>

        <param name="fperc" type="float" label="Percentile of feature value distribution for sample selection (Optional)" help="(--fperc)" optional="True"/>

        <param name="stop" type="integer" label="Number of top samples to select (Optional)" help="The order is based on percentile specified by --sperc (--stop)" optional="True"/>

        <param name="ftop" type="integer" label="Number of top features to select (Optional)" help="The order is based on percentile specified by --fperc (--ftop)" optional="True"/>
    </inputs>

    <outputs>
        <data format="txt" name="tree" label="${tool.name} on ${on_string}: Tree" />
        <data format="txt" name="annotation" label="${tool.name} on ${on_string}: Annotation" />
    </outputs>

    <tests>
        <test>
            <param name="lefse_input" value="input_profile.tabular"/>
            <param name="annotations" value=""/>
            <param name="external_annotations" value=""/>
            <param name="background_levels" value=""/>
            <param name="background_clades" value=""/>
            <param name="background_colors" value=""/>
            <param name="title" value=""/>
            <param name="title_font_size" value="15"/>
            <param name="def_clade_size" value="10"/>
            <param name="min_clade_size" value="20"/>
            <param name="max_clade_size" value="200"/>
            <param name="def_font_size" value="10"/>
            <param name="min_font_size" value="8"/>
            <param name="max_font_size" value="12"/>
            <param name="annotation_legend_font_size" value="10"/>
            <param name="abundance_threshold" value="20.0"/>
            <param name="most_abundant" value=""/>
            <param name="least_biomarkers" value=""/>
            <param name="fname_row" value="0"/>
            <param name="sname_row" value="0" />
            <param name="metadata_rows" value=""/>
            <param name="skip_rows" value=""/>
            <param name="sperc" value=""/>
            <param name="fperc" value=""/>
            <param name="stop" value=""/>
            <param name="ftop" value=""/>
            <output name="annotation" file="output_annotation.txt"/>
            <output name="tree" file="output_tree.txt"/>
        </test>
    </tests>

    <help><![CDATA[

**What it does**

export2graphlan is a conversion software tool for producing both annotation and tree file for GraPhlAn. In particular, the annotation file tries to highlight specific sub-trees deriving automatically from input file what nodes are important. For more information, check the 
`user manual <https://bitbucket.org/CibioCM/export2graphlan/overview/>`_.

    ]]></help>

    <citations>
    </citations>
</tool>